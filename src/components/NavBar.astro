---
import { Image } from 'astro:assets';
import vollrathLogo from '../images/vollrath_logo.png';

const currentPath = new URL(Astro.request.url).pathname
const isDev = import.meta.env.DEV
const baseUrl = isDev ? '' : Astro.site


const navItems = [
	{ path: '/', label: 'Home', id: 'home-link' },
	{ path: '/about', label: 'About', id: 'about-link' },
	{ path: '/now', label: 'Now', id: 'now-link' },
	{ path: '/renders', label: 'Renders', id: 'renders-link' },
	{ path: '/blog', label: 'Blog', id: 'blog-link', additionalPaths: ['/posts'] }
]

function isPathActive(itemPath, additionalPaths = []) {
	return (
		currentPath === itemPath || additionalPaths.some((addPath) => currentPath.startsWith(addPath))
		)
}
---

<nav
	class="flex items-center justify-between px-12 py-6 mb-8 bg-white rounded-lg shadow-lg nav-bar border-gradient from-dark-card to-darker-card dark:bg-gradient-to-r lg:col-span-3"
>
<!-- <Image src={vollrathLogo} class="w-32 h-auto mr-2" alt="Vollrath Logo" /> -->

<span class="text-3xl">ðŸ‘‹</span>

	<!-- Hamburger Icon -->
	<div class="flex flex-col space-y-2 cursor-pointer lg:hidden" id="hamburger">
		<span class="block h-0.5 w-8 bg-dark-text"></span>
		<span class="block h-0.5 w-8 bg-dark-text"></span>
		<span class="block h-0.5 w-8 bg-dark-text"></span>
	</div>

	<div
		class="z-30 flex flex-col invisible text-xl select-none font-header md:flex-row lg:visible"
		id="nav-menu"
	>
		{
			navItems.map((item) => (
				<a
					href={`${baseUrl}${item.path}`}
					class={`nav-item font-medium px-4 py-2 transition hover:text-dark-text ${isPathActive(item.path, item.additionalPaths) ? 'gradient-underline text-dark-text' : ' text-gray-400'}`}
					id={item.id}
				>
					{item.label}
				</a>
			))
		}
		<div id="nav-underline" class="nav-underline"></div>
	</div>
</nav>

<script is:inline>
	let lastUnderlinePosition = { left: 0, width: 0 }

	function saveUnderlinePosition() {
		const underline = document.querySelector('#nav-underline')
		if (underline) {
			const style = window.getComputedStyle(underline)
			lastUnderlinePosition.left = parseInt(style.left, 10)
			lastUnderlinePosition.width = parseInt(style.width, 10)
		}
	}

	function updateUnderline() {
		const underline = document.querySelector('#nav-underline')
		const activeItem = document.querySelector('.nav-item.gradient-underline')
		if (!activeItem) return

		const navMenu = document.querySelector('#nav-menu')
		const activeItemRect = activeItem.getBoundingClientRect()
		const navMenuRect = navMenu.getBoundingClientRect()

		const newLeft = activeItemRect.left +10 - navMenuRect.left
		const newWidth = activeItem.offsetWidth -20

		const movingRight = newLeft > lastUnderlinePosition.left

		underline.style.left = `${movingRight ? lastUnderlinePosition.left : lastUnderlinePosition.left + lastUnderlinePosition.width - newWidth}px`
		underline.style.width = `${lastUnderlinePosition.width}px`

		requestAnimationFrame(() => {
			underline.style.left = `${newLeft}px`
			underline.style.width = `${newWidth}px`
		})
	}

	document.addEventListener('astro:before-swap', saveUnderlinePosition)
	document.addEventListener('astro:after-swap', updateUnderline)
	document.addEventListener('DOMContentLoaded', updateUnderline)
</script>
